name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set lowercase repository owner
      id: repo_owner
      run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ env.REPO_OWNER }} --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t ghcr.io/${{ env.REPO_OWNER }}/pytodo:latest .
        docker push ghcr.io/${{ env.REPO_OWNER }}/pytodo:latest

    - name: Pull the private Docker image
      run: docker pull ghcr.io/${{ env.REPO_OWNER }}/pytodo:latest

    - name: Run the Docker container
      run: |
        docker run -d --name pytodo-container -p 5000:5000 ghcr.io/${{ github.repository_owner }}/pytodo:latest

    - name: Verify container is running
      run: docker ps -a

    - name: Clean up
      run: docker rm -f pytodo-container

    - name: Deploy to Minikube
      run: |
        kubectl apply -f minikube/mysql-pvc.yaml
        kubectl apply -f minikube/mysql-secret.yaml
        kubectl apply -f minikube/mysql-deployment.yaml
        kubectl apply -f minikube/mysql-service.yaml
        kubectl apply -f minikube/pytodo-deployment.yaml
        kubectl apply -f minikube/pytodo-service.yaml
        minikube service pytodo-service

    - name: Verify deployment
      run: kubectl get all
    
    - name: Clean up
      run: |
        kubectl delete deployment pytodo-deployment
        kubectl delete service pytodo-service
        kubectl delete deployment mysql-deployment
        kubectl delete service mysql-service
        kubectl delete secret mysql-secret
        kubectl delete pvc mysql-pvc